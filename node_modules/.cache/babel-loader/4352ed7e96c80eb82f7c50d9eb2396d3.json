{"ast":null,"code":"var _jsxFileName = \"/Users/sumiyoshitsubasa/React-Test/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; // Action Creators:\n// Store\n// Presentational Components (No state, only props and render)\n\nconst List = ({\n  data,\n  onRemove\n}) => {\n  const list = Object.values(data);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, list.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo.id,\n    todo: todo,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })));\n};\n\nfunction TodoItem({\n  todo,\n  onRemove\n}) {\n  const _onRemove = () => onRemove(todo);\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, todo.text, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: _onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 26\n    }\n  }, \"Remove\"));\n} // Top-Level Component\n\n\nconst App = ({\n  data,\n  addTodo,\n  removeTodo\n}) => {\n  const [text, setText] = React.useState('');\n\n  const onSubmit = () => {\n    if (!text) {\n      return;\n    }\n\n    addTodo({\n      text\n    });\n    setText('');\n  };\n\n  const onChangeText = e => {\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Redux Todo List:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    data: data,\n    onRemove: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n}; // Map state and dispatch to props\n\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    removeTodo,\n    addTodo\n  }, dispatch);\n} // Container components (Pass props into presentational component)\n\n\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default AppContainer;","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/React-Test/src/App.js"],"names":["React","connect","bindActionCreators","List","data","onRemove","list","Object","values","map","todo","id","TodoItem","_onRemove","text","App","addTodo","removeTodo","setText","useState","onSubmit","onChangeText","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","AppContainer"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect,} from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n\n\n\n\n\n// Action Creators:\n\n\n\n\n// Store\n\n\n// Presentational Components (No state, only props and render)\nconst List = ({data, onRemove}) => {\n  const list = Object.values(data)\n  return (\n  <ul>\n    {\n        list.map(\n          todo =>\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              onRemove={onRemove}\n            />\n        )\n    }\n  </ul>\n )\n}\n\nfunction TodoItem({todo, onRemove}) {\n  const _onRemove = () => onRemove(todo)\n  return <li>{todo.text} <button onClick={_onRemove}>Remove</button></li>;\n}\n\n// Top-Level Component\nconst App = ({ data, addTodo, removeTodo }) => {\n    const [text, setText] = React.useState('')\n    const onSubmit = () => {\n      if(!text) {\n        return\n      }\n      addTodo({\n         text\n      })\n      setText('')\n    }\n    const onChangeText = (e) => {\n       setText(e.target.value)\n    }\n\n\n\n  \treturn (\n    \t<div>\n        <h3>Redux Todo List:</h3>\n        <div>\n      \t  <input type='text' value={text} onChange={onChangeText}/>\n          <input type='submit' value='Add' onClick={onSubmit} />\n        </div>\n        <List data={data} onRemove={removeTodo} />\n      </div>\n    );\n};\n\n // Map state and dispatch to props\nfunction mapStateToProps (state) {\n\treturn {\n  \tdata: state.data\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n\treturn bindActionCreators({\n  \tremoveTodo,\n    addTodo\n  }, dispatch);\n}\n\n\n\n// Container components (Pass props into presentational component)\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default AppContainer\n\n\n"]},"metadata":{},"sourceType":"module"}