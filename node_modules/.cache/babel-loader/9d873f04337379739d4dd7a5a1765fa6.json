{"ast":null,"code":"var _jsxFileName = \"/Users/sumiyoshitsubasa/React-Test/src/App.js\";\nimport { React, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addTodo, removeTodo } from './actions/actions';\nimport List from './components/organisms/List';\n\nconst App = ({\n  data,\n  addTodo,\n  removeTodo\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = () => {\n    if (!text) {\n      return;\n    }\n\n    addTodo({\n      text\n    });\n    setText('');\n  };\n\n  const onChangeText = e => {\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Redux Todo List:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    data: data,\n    onRemove: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}; // Map state and dispatch to props\n\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    removeTodo,\n    addTodo\n  }, dispatch);\n} // Container components (Pass props into presentational component)\n\n\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default AppContainer;","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/React-Test/src/App.js"],"names":["React","useState","connect","bindActionCreators","addTodo","removeTodo","List","App","data","text","setText","onSubmit","onChangeText","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","AppContainer"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAAQC,OAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAmC;AAC7C,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMU,QAAQ,GAAG,MAAM;AACrB,QAAG,CAACF,IAAJ,EAAU;AACR;AACD;;AACDL,IAAAA,OAAO,CAAC;AACLK,MAAAA;AADK,KAAD,CAAP;AAGAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GARD;;AASA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACzBH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACF,GAFD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEN,IAA1B;AAAgC,IAAA,QAAQ,EAAEG,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,OAAO,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,eAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAkB,IAAA,QAAQ,EAAEH,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA1BD,C,CA4BA;;;AACA,SAASW,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADP,GAAP;AAGD;;AAED,SAASU,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAOhB,kBAAkB,CAAC;AACxBE,IAAAA,UADwB;AAExBD,IAAAA;AAFwB,GAAD,EAGtBe,QAHsB,CAAzB;AAID,C,CAID;;;AACA,MAAMC,YAAY,GAAGlB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,GAA7C,CAArB;AAEA,eAAea,YAAf","sourcesContent":["import {React,useState} from 'react'\nimport { connect} from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {addTodo,removeTodo} from './actions/actions'\nimport List from './components/organisms/List'\n\nconst App = ({ data, addTodo, removeTodo }) => {\n  const [text, setText] = useState('')\n  const onSubmit = () => {\n    if(!text) {\n      return\n    }\n    addTodo({\n       text\n    })\n    setText('')\n  }\n  const onChangeText = (e) => {\n     setText(e.target.value)\n  }\n\n\n  return (\n    <div>\n      <h3>Redux Todo List:</h3>\n      <div>\n        <input type='text' value={text} onChange={onChangeText}/>\n        <input type='submit' value='Add' onClick={onSubmit} />\n      </div>\n      <List data={data} onRemove={removeTodo} />\n    </div>\n   );\n};\n\n// Map state and dispatch to props\nfunction mapStateToProps (state) {\n  return {\n    data: state.data\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    removeTodo,\n    addTodo\n  }, dispatch);\n}\n\n\n\n// Container components (Pass props into presentational component)\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default AppContainer\n"]},"metadata":{},"sourceType":"module"}