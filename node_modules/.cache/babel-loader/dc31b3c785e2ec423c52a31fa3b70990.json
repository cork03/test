{"ast":null,"code":"var _jsxFileName = \"/Users/sumiyoshitsubasa/React-Test/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport { textChange } from './actions/actions';\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"\\u6587\\u5B57\\u6570\\uFF1A\", (this, props.textLength)), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    onClick: e => this.props.textChange(e.target.value, e.target.value.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    textValue: state.text.textValue,\n    textLength: state.text.textLength\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    textChange: (textValue, textLength) => dispatch(textChange(textValue, textLength))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(App);","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/React-Test/src/App.js"],"names":["React","useState","Component","connect","GlobalStyle","textChange","App","props","textLength","e","target","value","length","mapStateToProps","state","textValue","text","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAU,MAAKC,KAAK,CAACC,UAArB,EADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAEC,CAAC,IAAI,KAAKF,KAAL,CAAWF,UAAX,CAAsBI,CAAC,CAACC,MAAF,CAASC,KAA/B,EAAsCF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAArD,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CAVD;;AAYA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACE,IAAN,CAAWD,SADjB;AAELP,IAAAA,UAAU,EAAEM,KAAK,CAACE,IAAN,CAAWR;AAFlB,GAAP;AAID,CALD;;AAOA,MAAMS,gBAAgB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACLb,IAAAA,UAAU,EAAE,CAACU,SAAD,EAAWP,UAAX,KACVU,QAAQ,CAACb,UAAU,CAACU,SAAD,EAAWP,UAAX,CAAX;AAFL,GAAP;AAID,CALD;;AAOA,eAAeL,OAAO,CACpBU,eADoB,EAEpBI,gBAFoB,CAAP,CAGbX,GAHa,CAAf","sourcesContent":["import React,{ useState,Component } from 'react'\nimport { connect } from 'react-redux'\nimport { GlobalStyle } from './styles/GlobalStyle'\nimport {textChange} from './actions/actions'\n\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <div>文字数：{this,props.textLength}</div>\n      <textarea\n        type='text'\n        onClick={e => this.props.textChange(e.target.value, e.target.value.length)}\n      />\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    textValue: state.text.textValue,\n    textLength: state.text.textLength,\n  }\n}\n\nconst mapDispatchProps = dispatch => {\n  return {\n    textChange: (textValue,textLength) =>\n      dispatch(textChange(textValue,textLength)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchProps\n)(App);\n\n"]},"metadata":{},"sourceType":"module"}