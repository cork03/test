{"ast":null,"code":"var _jsxFileName = \"/Users/sumiyoshitsubasa/React-Test/src/App.js\";\nimport { React, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nconst App = ({\n  data,\n  addTodo,\n  removeTodo\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = () => {\n    if (!text) {\n      return;\n    }\n\n    addTodo({\n      text\n    });\n    setText('');\n  };\n\n  const onChangeText = e => {\n    setText(e.target.value);\n  };\n\n  const _isVisble = useMemo(() => isVisble ? true : false, [isVisble]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Redux Todo List:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    visible: isVisble,\n    data: data,\n    onRemove: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}; // Map state and dispatch to props\n\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return Redux.bindActionCreators({\n    removeTodo,\n    addTodo\n  }, dispatch);\n} // Container components (Pass props into presentational component)\n\n\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/React-Test/src/App.js"],"names":["React","useState","connect","bindActionCreators","App","data","addTodo","removeTodo","text","setText","onSubmit","onChangeText","e","target","value","_isVisble","useMemo","isVisble","mapStateToProps","state","mapDispatchToProps","dispatch","Redux","AppContainer"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAmC;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMS,QAAQ,GAAG,MAAM;AACrB,QAAG,CAACF,IAAJ,EAAU;AACR;AACD;;AACDF,IAAAA,OAAO,CAAC;AACLE,MAAAA;AADK,KAAD,CAAP;AAGAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GARD;;AASA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACzBH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACF,GAFD;;AAIA,QAAMC,SAAS,GAAGC,OAAO,CAAC,MAAMC,QAAQ,GAAG,IAAH,GAAU,KAAzB,EAAiC,CAACA,QAAD,CAAjC,CAAzB;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAET,IAA1B;AAAgC,IAAA,QAAQ,EAAEG,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,OAAO,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,eAME,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEO,QAAf;AAAyB,IAAA,IAAI,EAAEZ,IAA/B;AAAqC,IAAA,QAAQ,EAAEE,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA3BD,C,CA6BA;;;AACA,SAASW,eAAT,CAA0BC,KAA1B,EAAiC;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACd;AADP,GAAP;AAGC;;AAED,SAASe,kBAAT,CAA6BC,QAA7B,EAAuC;AACvC,SAAOC,KAAK,CAACnB,kBAAN,CAAyB;AAC9BI,IAAAA,UAD8B;AAE9BD,IAAAA;AAF8B,GAAzB,EAGJe,QAHI,CAAP;AAIC,C,CAID;;;AACA,MAAME,YAAY,GAAGrB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,GAA7C,CAArB","sourcesContent":["import {React,useState} from 'react'\nimport { connect,} from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nconst App = ({ data, addTodo, removeTodo }) => {\n  const [text, setText] = useState('')\n  const onSubmit = () => {\n    if(!text) {\n      return\n    }\n    addTodo({\n       text\n    })\n    setText('')\n  }\n  const onChangeText = (e) => {\n     setText(e.target.value)\n  }\n\n  const _isVisble = useMemo(() => isVisble ? true : false , [isVisble])\n\n  return (\n    <div>\n      <h3>Redux Todo List:</h3>\n      <div>\n        <input type='text' value={text} onChange={onChangeText}/>\n        <input type='submit' value='Add' onClick={onSubmit} />\n      </div>\n      <List visible={isVisble} data={data} onRemove={removeTodo} />\n    </div>\n   );\n};\n\n// Map state and dispatch to props\nfunction mapStateToProps (state) {\nreturn {\n  data: state.data\n};\n}\n\nfunction mapDispatchToProps (dispatch) {\nreturn Redux.bindActionCreators({\n  removeTodo,\n  addTodo\n}, dispatch);\n}\n\n\n\n// Container components (Pass props into presentational component)\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}