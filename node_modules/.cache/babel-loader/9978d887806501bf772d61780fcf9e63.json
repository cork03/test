{"ast":null,"code":"var _jsxFileName = \"/Users/sumiyoshitsubasa/React-Test/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport { connect, ReactReduxContext } from 'react-redux';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport { addTodo, removeTodo } from './actions/actions';\n\nconst List = ({\n  data,\n  onRemove\n}) => {\n  const list = Object.values(data);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, list.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo.id,\n    todo: todo,\n    onRemove: reMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 19\n    }\n  })));\n};\n\nconst TodoItem = ({\n  todo,\n  onRemove\n}) => {\n  const _onRemove = () => onRemove(todo);\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, todo.text, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: _onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, \"Remove\"));\n};\n\nconst App = ({\n  data,\n  addTodo,\n  removeTodo\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = () => {\n    if (!text) {\n      return;\n    }\n\n    addTodo({\n      text\n    });\n    setText('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/React-Test/src/App.js"],"names":["React","useState","Component","connect","ReactReduxContext","GlobalStyle","addTodo","removeTodo","List","data","onRemove","list","Object","values","map","todo","id","reMove","TodoItem","_onRemove","text","App","setText","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,OAAT,EAAkBC,iBAAlB,QAA2C,aAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAAQC,OAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAAqB;AAChC,QAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAb;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,IAAI,CAACG,GAAL,CAASC,IAAI,iBACT,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,QAAQ,EAAEE,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CADJ;AAaD,CAfD;;AAiBA,MAAMC,QAAQ,GAAG,CAAC;AAACH,EAAAA,IAAD;AAAML,EAAAA;AAAN,CAAD,KAAqB;AACpC,QAAMS,SAAS,GAAG,MAAMT,QAAQ,CAACK,IAAD,CAAhC;;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACK,IAAV,eAAe;AAAQ,IAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf,CAAP;AACD,CAHD;;AAKA,MAAME,GAAG,GAAG,CAAC;AAACZ,EAAAA,IAAD;AAAMH,EAAAA,OAAN;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AACzC,QAAM,CAACa,IAAD,EAAME,OAAN,IAAiBrB,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMsB,QAAQ,GAAG,MAAM;AACrB,QAAG,CAACH,IAAJ,EAAU;AACR;AACD;;AACDd,IAAAA,OAAO,CAAC;AACNc,MAAAA;AADM,KAAD,CAAP;AAGAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GARD;;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAjBD","sourcesContent":["import React,{ useState,Component } from 'react'\nimport { connect, ReactReduxContext } from 'react-redux'\nimport { GlobalStyle } from './styles/GlobalStyle'\nimport {addTodo,removeTodo} from './actions/actions'\n\nconst List = ({data,onRemove}) => {\n  const list = Object.values(data)\n  return (\n      <ul>\n          {\n              list.map(todo =>\n                  <TodoItem\n                    key={todo.id}\n                    todo={todo}\n                    onRemove={reMove}\n                  />\n              )\n          }\n      </ul>\n  )\n}\n\nconst TodoItem = ({todo,onRemove}) => {\n  const _onRemove = () => onRemove(todo)\n  return <li>{todo.text}<button onClick={_onRemove}>Remove</button></li>\n}\n\nconst App = ({data,addTodo,removeTodo}) => {\n  const [text,setText] = useState('')\n  const onSubmit = () => {\n    if(!text) {\n      return\n    }\n    addTodo({\n      text\n    })\n    setText('')\n  }\n\n  return (\n    <div>\n\n    </div>\n  );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}