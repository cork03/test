{"ast":null,"code":"// State:\nconst initialData = {\n  1: {\n    id: 1,\n    text: \"brush a tooth\"\n  },\n  2: {\n    id: 2,\n    text: \"wash a face\"\n  },\n  3: {\n    id: 3,\n    text: \"drink a coffee\"\n  }\n};\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n}; // Reducer:\n\nconst reducer = (state = initialState, action) => {\n  let newState = { ...state\n  };\n  const {\n    id,\n    text\n  } = action.payload || {};\n\n  switch (action.type) {\n    case ADD_TODO:\n      newState.index++;\n      newState.data[newState.index] = {\n        id: newState.index,\n        text\n      };\n      return newState;\n\n    case REMOVE_TODO:\n      let newData = { ...newState.data\n      };\n      delete newData[id];\n      return { ...newState,\n        data: newData\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/React-Test/src/reducers/index.js"],"names":["initialData","id","text","initialState","index","Object","values","length","data","reducer","state","action","newState","payload","type","ADD_TODO","REMOVE_TODO","newData"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG;AAClB,KAAG;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADe;AAElB,KAAG;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFe;AAGlB,KAAG;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf;AAHe,CAApB;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcN,WAAd,EAA2BO,MADf;AAEnBC,EAAAA,IAAI,EAAER;AAFa,CAArB,C,CAKA;;AACA,MAAMS,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,MAAIC,QAAQ,GAAG,EAAC,GAAGF;AAAJ,GAAf;AACA,QAAM;AAAET,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAeS,MAAM,CAACE,OAAP,IAAkB,EAAvC;;AACA,UAAQF,MAAM,CAACG,IAAf;AACC,SAAKC,QAAL;AACGH,MAAAA,QAAQ,CAACR,KAAT;AACAQ,MAAAA,QAAQ,CAACJ,IAAT,CAAcI,QAAQ,CAACR,KAAvB,IAAgC;AAAEH,QAAAA,EAAE,EAAEW,QAAQ,CAACR,KAAf;AAAsBF,QAAAA;AAAtB,OAAhC;AACA,aAAOU,QAAP;;AACF,SAAKI,WAAL;AACE,UAAIC,OAAO,GAAG,EAAC,GAAGL,QAAQ,CAACJ;AAAb,OAAd;AACA,aAAOS,OAAO,CAAChB,EAAD,CAAd;AACA,aAAO,EACL,GAAGW,QADE;AAELJ,QAAAA,IAAI,EAAES;AAFD,OAAP;;AAIF;AACC,aAAOP,KAAP;AAbH;AAeD,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["// State:\nconst initialData = {\n  1: { id: 1, text: \"brush a tooth\"},\n  2: { id: 2, text: \"wash a face\"},\n  3: { id: 3, text: \"drink a coffee\"},\n}\n\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n}\n\n// Reducer:\nconst reducer = (state = initialState, action) => {\n  let newState = {...state}\n  const { id, text } = action.payload || {}\n  switch (action.type) {\n  \tcase ADD_TODO:\n      newState.index++\n      newState.data[newState.index] = { id: newState.index, text };\n      return newState\n    case REMOVE_TODO:\n      let newData = {...newState.data}\n      delete newData[id]\n      return {\n        ...newState,\n        data: newData\n      }\n    default:\n    \treturn state;\n  }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}