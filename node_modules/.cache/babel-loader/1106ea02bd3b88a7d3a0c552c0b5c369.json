{"ast":null,"code":"import { ADD_TODO } from '../actions/actions';\nimport { REMOVE_TODO } from '../actions/actions';\nconst initialData = {\n  1: {\n    id: 1,\n    text: 'bush a tooth'\n  },\n  2: {\n    id: 2,\n    text: 'wash a face'\n  },\n  3: {\n    id: 3,\n    text: 'drink a coffee'\n  }\n};\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n};\n\nconst todo = (state = initialState, action) => {\n  let newState = { ...state\n  };\n  const {\n    id,\n    text\n  } = action.payload || {};\n\n  switch (action.type) {\n    case TEXTCHANGE:\n      return {\n        textValue: action.textValue,\n        textLength: action.textLength\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default text;","map":{"version":3,"sources":["/Users/sumiyoshitsubasa/React-Test/src/reducers/todo.js"],"names":["ADD_TODO","REMOVE_TODO","initialData","id","text","initialState","index","Object","values","length","data","todo","state","action","newState","payload","type","TEXTCHANGE","textValue","textLength"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,oBAAvB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AAGA,MAAMC,WAAW,GAAG;AAClB,KAAG;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE;AAAZ,GADe;AAElB,KAAG;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE;AAAZ,GAFe;AAGlB,KAAG;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE;AAAZ;AAHe,CAApB;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcN,WAAd,EAA2BO,MADf;AAEnBC,EAAAA,IAAI,EAAER;AAFa,CAArB;;AAKA,MAAMS,IAAI,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAsBQ,MAAtB,KAAiC;AAC5C,MAAIC,QAAQ,GAAG,EAAC,GAAGF;AAAJ,GAAf;AACA,QAAM;AAACT,IAAAA,EAAD;AAAIC,IAAAA;AAAJ,MAAYS,MAAM,CAACE,OAAP,IAAkB,EAApC;;AACE,UAAOF,MAAM,CAACG,IAAd;AACI,SAAKC,UAAL;AACE,aAAO;AAACC,QAAAA,SAAS,EAAEL,MAAM,CAACK,SAAnB;AAA6BC,QAAAA,UAAU,EAAEN,MAAM,CAACM;AAAhD,OAAP;;AACF;AACI,aAAOP,KAAP;AAJR;AAMH,CATD;;AAWA,eAAeR,IAAf","sourcesContent":["import {ADD_TODO} from '../actions/actions'\nimport {REMOVE_TODO} from '../actions/actions'\n\n\nconst initialData = {\n  1: {id:1,text: 'bush a tooth'},\n  2: {id:2,text: 'wash a face'},\n  3: {id:3,text: 'drink a coffee'}\n}\n\nconst initialState = {\n  index: Object.values(initialData).length,\n  data: initialData\n}\n\nconst todo = (state = initialState,action) => {\n  let newState = {...state}\n  const {id,text} = action.payload || {}\n    switch(action.type) {\n        case TEXTCHANGE:\n          return {textValue: action.textValue,textLength: action.textLength};\n        default:\n            return state;\n    }\n}\n\nexport default text\n\n"]},"metadata":{},"sourceType":"module"}